- name: Create output dir
  ansible.builtin.file:
    path: "{{ launchertw_build_output_dir }}"
    state: directory
    mode: 0750
  when: launchertw_operation == 'build' and launchertw_build_output_dir != 'TMP'

- name: Create temp directory
  when: launchertw_operation == 'deploy' or launchertw_build_output_dir == 'TMP'
  block:
    - name: Create temp directory
      ansible.builtin.tempfile:
        path: /tmp
        prefix: LauncherTW_
        state: directory
      register: _temp_dir
    - name: Set output to temp directory
      ansible.builtin.set_fact:
        launchertw_build_output_dir: "{{ _temp_dir.path }}"

- name: Create css dir in output dir
  ansible.builtin.file:
    path: "{{ launchertw_build_output_dir }}/css"
    mode: 0750
    state: directory
  register: _css_dir

- name: Copy img dir to output dir
  ansible.builtin.copy:
    src: img
    dest: "{{ launchertw_build_output_dir }}"
    mode: 0750
- name: Copy robots.txt to output dir
  ansible.builtin.copy:
    src: robots.txt
    dest: "{{ launchertw_build_output_dir }}"
    mode: 0640

- name: Download and extract Font Awesome
  ansible.builtin.unarchive:
    # yamllint disable-line rule:line-length
    src: "https://use.fontawesome.com/releases/v{{ font_awesome_version }}/fontawesome-free-{{ font_awesome_version }}-web.zip"
    dest: "{{ launchertw_build_output_dir }}"
    remote_src: true
    include:
      - "fontawesome-free-{{ font_awesome_version }}-web/css/all.min.css"
      - "fontawesome-free-{{ font_awesome_version }}-web/webfonts/fa-brands-400.woff2"
      - "fontawesome-free-{{ font_awesome_version }}-web/webfonts/fa-solid-900.woff2"

- name: Build Tailwind CSS
  ansible.builtin.command:
    chdir: "{{ role_path }}"
    argv:
      - npx
      - tailwindcss
      - -m
      - -c
      - files/tailwind.config.js
      - -i
      - files/css/launcher.css
      - -o
      - "{{ _css_dir.path }}/launcher.min.css"
  changed_when: true

- name: Get checksum of css output
  ansible.builtin.stat:
    path: "{{ _css_dir.path }}/launcher.min.css"
    checksum_algorithm: md5
  register: _css_stat
- name: Copy css output to include checksum
  ansible.builtin.copy:
    src: "{{ _css_dir.path }}/launcher.min.css"
    dest: "{{ _css_dir.path }}/launcher.min.{{ _css_stat.stat.checksum }}.css"
    mode: 0640
- name: Remove original css output
  ansible.builtin.file:
    path: "{{ _css_dir.path }}/launcher.min.css"
    state: absent

- name: Install HTML to temp dir
  ansible.builtin.template:
    src: index.html.j2
    dest: "{{ launchertw_build_output_dir }}/index.html"
    mode: 0640
